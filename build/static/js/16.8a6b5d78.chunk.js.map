{"version":3,"sources":["components/Authentification/FormButton.js","components/Authentification/AuthRedirect.js","components/Authentification/LogInForm/LogInForm.module.css","components/Authentification/LogInForm/LogIn.js","pages/AuthPage/LoginPage.js"],"names":["FormButton","styled","button","_templateObject","authRedirect","ComposedComponent","Redirect","_Component","Object","_Users_marusya_Desktop_resume_project_time_plaining_manager_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","_super","_Users_marusya_Desktop_resume_project_time_plaining_manager_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__","_Users_marusya_Desktop_resume_project_time_plaining_manager_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","apply","arguments","_Users_marusya_Desktop_resume_project_time_plaining_manager_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","authentificated","history","error","location","state","from","replace","_this$props2","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Component","mDTP","errorMsg","connect","isAuthentificated","module","exports","loginContainer","loginTextWrap","mainText","sloganText","formContainer","formLogin","password","textEmail","textPassword","star","linkForgot","linkCreate","textLogin","input","buttonLogin","inputError","errorInput","wrapLogin","textWrap","imgContainer","LogIn","screenWidth","document","documentElement","clientWidth","errorMessage","values","handleBlur","handleChange","handleSubmit","errors","touched","react_default","Fragment","Header","className","style","react_router_dom","to","textCreate","method","onSubmit","htmlFor","email","onChange","onBlur","type","name","id","placeholder","required","defaultProps","getError","SIGNIN_SCHEMA","Yup","shape","min","max","mapDispatchToProps","onSignIn","signIn","_ref","formik_esm","initialValues","_ref2","setSubmitting","setTimeout","validationSchema","LogInForm_LogIn","assign"],"mappings":"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","file":"static/js/16.8a6b5d78.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst FormButton = styled.button`\n  width: 312px;\n  height: 60px;\n  font-size: 16px;\n  text-align: center;\n  background-color: #ff6b08;\n  color: #fff;\n  border: none;\n  margin: 0 auto;\n  padding: 0;\n  transition: all 0.5s;\n\n  &:hover {\n    transform: translate(-3px, -3px);\n    box-shadow: 3px 3px 0px 0px rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport default FormButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { isAuthentificated } from '../../redux/session/sessionSelectors';\nimport { errorMsg } from '../../redux/session/sessionActions';\n\nconst authRedirect = ComposedComponent => {\n  class Redirect extends Component {\n    static propTypes = {\n      authentificated: PropTypes.bool.isRequired,\n      history: ReactRouterPropTypes.history.isRequired,\n      location: ReactRouterPropTypes.location.isRequired,\n      error: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n      const { authentificated, history, error } = this.props;\n      const { location } = this.props;\n      error();\n      if (!authentificated) return;\n\n      if (location.state && location.state.from) {\n        history.replace(location.state.from);\n      }\n      history.replace('/dashboard');\n    }\n\n    componentDidUpdate() {\n      const { authentificated, location, history } = this.props;\n\n      if (!authentificated) return;\n      if (location.state && location.state.from) {\n        history.replace(location.state.from);\n      }\n\n      history.replace('/dashboard');\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} />;\n    }\n  }\n\n  const mSTP = state => ({ authentificated: isAuthentificated(state) });\n\n  const mDTP = {\n    error: errorMsg,\n  };\n  return connect(\n    mSTP,\n    mDTP,\n  )(Redirect);\n};\n\nexport default authRedirect;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"LogInForm_loginContainer__1m7T_\",\"loginTextWrap\":\"LogInForm_loginTextWrap__dO2Ig\",\"mainText\":\"LogInForm_mainText__3L56o\",\"sloganText\":\"LogInForm_sloganText__2O9yO\",\"formContainer\":\"LogInForm_formContainer__3If4o\",\"formLogin\":\"LogInForm_formLogin__1scxr\",\"password\":\"LogInForm_password__3WT4R\",\"textEmail\":\"LogInForm_textEmail__1V_rs\",\"textPassword\":\"LogInForm_textPassword__2NXa0\",\"star\":\"LogInForm_star__345XE\",\"linkForgot\":\"LogInForm_linkForgot__JjMC-\",\"linkCreate\":\"LogInForm_linkCreate__3MKYT\",\"textLogin\":\"LogInForm_textLogin__2_omD\",\"input\":\"LogInForm_input__1dqU1\",\"buttonLogin\":\"LogInForm_buttonLogin__3EIYq\",\"inputError\":\"LogInForm_inputError__6hU3X\",\"error\":\"LogInForm_error__1QknP\",\"errorInput\":\"LogInForm_errorInput__1ZHMW\",\"wrapLogin\":\"LogInForm_wrapLogin__22g5L\",\"textWrap\":\"LogInForm_textWrap__oc44C\",\"imgContainer\":\"LogInForm_imgContainer__QxfVb\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport style from './LogInForm.module.css';\nimport FormButton from '../FormButton';\nimport Header from '../../Header/Header';\nimport { getError } from '../../../redux/session/sessionSelectors';\n\nclass LogIn extends Component {\n  state = {};\n\n  render() {\n    const screenWidth = document.documentElement.clientWidth;\n    const {\n      errorMessage,\n      values,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      errors,\n      touched,\n    } = this.props;\n    return (\n      <>\n        {screenWidth < 768 && <Header />}\n        <div className={style.loginContainer}>\n          <div className={style.imgContainer} />\n\n          <div className={style.textWrap}>\n            <div className={style.loginTextWrap}>\n              <h2 className={style.textLogin}>Log In</h2>\n              <Link to=\"/registration\" className={style.linkCreate}>\n                <p className={style.textCreate}>Create an account</p>\n              </Link>\n            </div>\n\n            <div className={style.formContainer}>\n              <div className={style.mainText}>\n                <span className={style.sloganText}>\n                  Take control your life.\n                </span>\n                <span className={style.sloganText}>Just check in.</span>\n              </div>\n\n              <form\n                method=\"GET\"\n                className={style.formLogin}\n                onSubmit={handleSubmit}\n              >\n                <label htmlFor=\"1\">\n                  <p className={style.textEmail}>\n                    E-mail<span className={style.star}>*</span>\n                  </p>\n                  <input\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    type=\"email\"\n                    name=\"email\"\n                    className={style.input}\n                    id={errors.email && values.email !== '' && style.errorInput}\n                    placeholder=\"your@email.com\"\n                    required\n                  />\n                </label>\n                {errors.email && touched.email && (\n                  <div className={style.inputError}>{errors.email}</div>\n                )}\n\n                <label htmlFor=\"2\">\n                  <p className={style.password}>\n                    <span className={style.textPassword}>\n                      Password<span className={style.star}>*</span>\n                    </span>\n                  </p>\n                  <input\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    type=\"password\"\n                    name=\"password\"\n                    className={style.input}\n                    id={\n                      errors.password &&\n                      values.password !== '' &&\n                      style.errorInput\n                    }\n                    placeholder=\"your password\"\n                    required\n                  />\n                </label>\n                {errors.password && touched.password && (\n                  <div className={style.inputError}>{errors.password}</div>\n                )}\n\n                <FormButton type=\"submit\">Log In</FormButton>\n                {errorMessage && (\n                  <p className={style.error}>Invalid email or password</p>\n                )}\n              </form>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mSTP = state => ({\n  errorMessage: getError(state),\n});\n\nconst mDTP = {};\n\nLogIn.defaultProps = {\n  errorMessage: '',\n};\n\nLogIn.propTypes = {\n  errorMessage: PropTypes.string,\n  handleBlur: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  values: PropTypes.objectOf(PropTypes.string).isRequired,\n  errors: PropTypes.objectOf(PropTypes.string).isRequired,\n  touched: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(\n  mSTP,\n  mDTP,\n)(LogIn);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport LogIn from '../../components/Authentification/LogInForm/LogIn';\n// import { isAuthentificated } from '../../redux/session/sessionSelectors';\nimport authRedirect from '../../components/Authentification/AuthRedirect';\nimport { signIn } from '../../redux/session/sessionOperations';\n\nconst SIGNIN_SCHEMA = Yup.object().shape({\n  password: Yup.string()\n    .min(6, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n});\n\nconst LoginPage = ({ history, onSignIn }) => (\n  <div>\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          const { email, password } = values;\n          onSignIn({ email, password });\n          setSubmitting(false);\n        }, 100);\n      }}\n      validationSchema={SIGNIN_SCHEMA}\n    >\n      {props => <LogIn {...props} history={history} />}\n    </Formik>\n  </div>\n);\n\nLoginPage.propTypes = {\n  history: ReactRouterPropTypes.history.isRequired,\n  onSignIn: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  onSignIn: signIn,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(authRedirect(LoginPage));\n"],"sourceRoot":""}